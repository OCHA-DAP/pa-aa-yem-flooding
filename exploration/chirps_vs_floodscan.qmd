---
title: "floodscan_vs_chirps"
format: html
editor: visual
---

# Flood Scan vs Chirps

load libs and data
```{r}
library(tidyverse)
library(lubridate) #dates
library(janitor)
library(gghdx)

con <- DBI::dbConnect(RPostgres::Postgres(),
                      host= "localhost",
                      dbname = "global_gdb",
                      user      = "postgres",
                      # password      = db_info$drc_chol_db_pw,
                      port     = 5432)

adm0 <- st_read(con, "yem_adm0")
adm1 <- st_read(con, "yem_adm1")
adm2 <- st_read(con, "yem_adm2")

chirps_zs_dir <- file.path(Sys.getenv("AA_DATA_DIR"),
          "public",
          "processed",
          "yem",
          "chirps_zonal"
          )        

floodscan_zs_dir <- file.path(Sys.getenv("AA_DATA_DIR"),
          "private",
          "processed",
          "yem",
          "floodscan"
          )   

floodscan_files <- list.files(floodscan_zs_dir,full.names = T) %>% set_names(list.files(floodscan_zs_dir))
chirps_files <- list.files(chirps_zs_dir,full.names = T) %>% set_names(list.files(chirps_zs_dir))

chirps_ts <- chirps_files %>% 
    map(
        ~read_csv(.x) %>% 
            clean_names() %>% 
            rename_with(
                .cols=matches("*mean*|*min$|*max*|*sum*|*stdev*|*median*"),~paste0("chirps_",.x)
            )
    )


# dont know why this takes so long
fs_ts <-  floodscan_files %>% 
    map(
        ~read_csv(.x)
    )

fs_ts <- fs_ts %>% 
    map(~ .x %>% 
            clean_names() %>% 
            rename_with(.cols=matches("adm\\d"),~str_replace(.x,"_","")) %>% 
            rename(date = "time")
            )

fs_chirps_adm0 <- fs_ts$floodscan_stats_ADM0_PCODE.csv %>% 
    left_join(chirps_ts$chirps_daily_stats_ADM0_PCODE.csv) 

chirps_ts$chirps_daily_stats_ADM1_PCODE.csv %>% count(admin1pcode)


# form the photo shared of YEM it should not have all pcodes covered by floodscan
fs_ts$floodscan_stats_ADM1_PCODE.csv %>% 
    distinct(adm1pcode,count) %>% 
    ggplot(aes(x=adm1pcode, y=count))+
    geom_bar(stat="identity")+
    coord_flip()


# I can tell from the pic of flood scan coverage that theese are not covered...


```


interesting... are the very low values noise in the floodscan?


```{r}
fs_chirps_adm0 %>% 
    ggplot(aes(x=chirps_median,y=mean))+
    geom_point()+
    labs(x= "median rainfall (mm)", y= "mean flood fraction")

fs_chirps_adm0 %>% 
    ggplot(aes(x=chirps_max,y=mean))+
    geom_point()+
    labs(x= "max rainfall (mm)", y= "mean flood fraction")

fs_chirps_adm0 %>% 
    ggplot(aes(x=chirps_rollsum10_mean,y=mean))+
    geom_point()+
    labs(x= "max rainfall (mm)", y= "mean flood fraction")

fs_chirps_adm0 %>% 
    ggplot(aes(x=chirps_rollsum10_mean,y=sum))+
    geom_point()+
    labs(x= "10-day rolling sum average (mm)", y= "Sum flood fraction")

fs_chirps_adm0 %>% 
    ggplot(aes(x=chirps_rollsum10_max,y=sum))+
    geom_point()+
    labs(x= "10-day rolling sum max (mm)", y= "Sum flood fraction")

fs_chirps_adm0 %>% 
    ggplot(aes(x=chirps_rollsum10_max,y=mean))+
    geom_point()+
    scale_x_log10()+
    scale_y_log10(labels=scales::percent)+
    labs(x= "10-day rolling sum max (mm)", y= "Sum flood fraction")
```


adm 1 

```{r}

# filter(!adm1pcode %in% c("YE21","YE19","YE28")
fs_chirps_adm1 <- fs_ts$floodscan_stats_ADM1_PCODE.csv %>% 
    left_join(chirps_ts$chirps_daily_stats_ADM1_PCODE.csv, 
              by= c("date"="date",
                    "adm1pcode"="admin1pcode"
              )) %>% 
    left_join(adm1 %>% 
                  st_drop_geometry() %>% 
                  select(admin1Pcode,admin1Name_en),
              by= c("adm1pcode"="admin1Pcode"))


line_tbl<- fs_chirps_adm1 %>% 
    group_by(adm1pcode,admin1Name_en) %>% 
    summarise(
        mean = mean(chirps_rollsum10_max,na.rm=T),
        median=median(chirps_rollsum10_max,na.rm=T)
    )

fs_chirps_adm1 %>% 
    ggplot(aes(x=chirps_rollsum10_max, y= mean))+
    geom_point()+
    geom_vline(data= line_tbl, aes(xintercept=median),linetype="dashed", color="red")+
    scale_x_log10(labels= scales::comma)+
    scale_y_log10(labels=scales::percent)+
    facet_wrap(~admin1Name_en,scales = "free")+
   labs(x= "Precipitation (mm) 10 day rolling sum (CHIRPS)",
         y="Mean Flood Fraction (FLOODSCAN)",
         title = "Precipitation 10 day rolling sum vs mean flood fraction",
         subtitle = "Yemen (1998-2022)",
         caption = "10 day rolling sum aggregated spatially to admin 1 by maximum value. Red line represents median 10 day precip value.\nNOTE: admins without FLOODSCAN coverage should be removed")+
    theme(
        plot.caption = element_text(hjust = 0))
    )

fs_chirps_adm1 %>% 
    mutate(sum_div_count = sum/count,.after=count) %>% 
       ggplot(aes(x=chirps_rollsum10_max, y= sum))+
    geom_point()+
    geom_vline(data= line_tbl, aes(xintercept=median),
               linetype="dashed",
               color="red")+
    scale_x_log10(labels= scales::comma)+
    scale_y_log10(labels=scales::percent)+
    facet_wrap(~admin1Name_en,scales = "free")+
    labs(x= "Precipitation (mm) 10 day rolling sum (CHIRPS)",
         y="Sum Flood Fraction (FLOODSCAN)",
         title = "Precipitation 10 day rolling sum vs mean flood fraction",
         subtitle = "Yemen (1998-2022)",
         caption = "10 day rolling sum aggregated spatially to admin 1 by maximum value. Red line represents median 10 day precip value.\nNOTE: admins without FLOODSCAN coverage should be removed")+
    theme(
        plot.caption = element_text(hjust = 0)
        )
    



fs_chirps_adm1 %>% 
    filter(chirps_rollsum10_max>=5) %>% 
    ggplot(aes(x=chirps_rollsum10_max, y= mean))+
    geom_point()+
    scale_x_log10(labels= scales::comma)+
    scale_y_log10(labels=scales::percent)+
    facet_wrap(~adm1pcode,scales = "free")
```


return periods
```{r}
yearly_max_chirps <- chirps_ts$chirps_daily_stats_ADM0_PCODE.csv %>% 
    group_by(yr=year(date)) %>%
    summarise(
        max_daily_mean = max(chirps_mean,na.rm=T),
        max_roll10_mean = max(chirps_rollsum10_mean,na.rm=T)
    )
library(extRemes)
fit_chirps_daily = fevd(yearly_max_chirps$max_daily_mean,type="GEV")    
fit_chirps_10d = fevd(yearly_max_chirps$max_roll10_mean,type="GEV")    


plot(fit_chirps_daily)
plot(bla)
```
